datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

generator kysely {
    provider  = "prisma-kysely"
    camelCase = true
    output    = "kysely"
}

generator docs {
    provider = "node node_modules/prisma-docs-generator"
}

model User {
    // inherited fields
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deletedAt DateTime?

    // auth information
    // NOTE: we do *NOT* store password hash since we are using OAuth
    uid                String   @id
    oauthProvider      String // TODO: will be enum
    recentlyLoggedInAt DateTime

    // owned relations
    likedPosts Post[] @relation("like")
    savedPosts Post[] @relation("save")
}

model Post {
    // inherited fields
    id        String   @id @default(uuid()) // see https://www.prisma.io/docs/orm/reference/prisma-schema-reference#default
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // common information
    title       String    @db.VarChar(16)
    feeds       String[]
    caption     String    @db.VarChar(2200)
    contact     String?
    publishedAt DateTime
    startedAt   DateTime?
    endedAt     DateTime?
    link        String?
    views       Int       @default(0)

    // event type and geolocation related fields
    isOnline  Boolean
    isOffline Boolean
    lat       Float?
    lng       Float?
    address1  String?
    address2  String?
    branch    String?

    // owned relations
    tags       Tag[]
    likedUsers User[] @relation("like")
    savedUsers User[] @relation("save")

    // referenced relations
    categoryId String
    category   Category @relation(fields: [categoryId], references: [id], onDelete: NoAction)
    companyId  String
    company    Company  @relation(fields: [companyId], references: [id], onDelete: NoAction)
}

model Company {
    // inherited fields
    id        String    @id @default(uuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deletedAt DateTime?

    name String  @unique
    logo String?

    // owned relations
    post Post[]
}

model Category {
    // inherited fields
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name String @unique

    // owned relations
    post Post[]
}

model Tag {
    // inherited fields
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name String @unique

    // owned relations
    post Post[]
}
